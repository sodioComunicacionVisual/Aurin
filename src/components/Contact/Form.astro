---
// @ts-nocheck
import { Mail, MapPin } from 'lucide-astro';
import MainButton from '../UI/MainButton.astro';
---

<section class="contact-section">
  <div class="contact-container">
    <div class="contact-header">
      <h2 class="contact-title">
        Preguntanos cualquier<br/>cosa o solo dinos
        <span class="highlight"> ¡Hola!</span>
      </h2>
    </div>

    <div class="contact-content">
      <div class="contact-info">
        <div class="info-item">
          <Mail size={24} class="icon-yellow" />
          <a href="mailto:hola@aurin.com" class="info-text">hola@aurin.com</a>
        </div>
        <div class="info-item">
          <MapPin size={24} class="icon-yellow" />
          <p class="info-text">Aldea Creativa, #207 San Jerónimo. La pradera</p>
        </div>
      </div>

      <div class="contact-form-wrapper">
        <h3 class="form-title">Contáctanos</h3>
        <form class="contact-form">
          <div class="form-row">
            <div class="form-group">
              <label for="nombre" class="form-label">Nombre</label>
              <input
                type="text"
                id="nombre"
                name="nombre"
                placeholder="Escribe tu nombre aquí y apellidos..."
                class="form-input"
                required
              />
            </div>
            <div class="form-group">
              <label for="correo" class="form-label">Correo</label>
              <input
                type="email"
                id="correo"
                name="correo"
                placeholder="Escribe tu correo aquí"
                class="form-input"
                required
              />
            </div>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="servicio" class="form-label">Servicio de interés</label>
              <div class="motion-dropdown" data-dropdown>
                <button type="button" class="dropdown-trigger" data-trigger>
                  <span class="dropdown-text" data-text>Selecciona un servicio...</span>
                  <div class="dropdown-arrow" data-arrow>
                    <svg width="12" height="8" viewBox="0 0 12 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M1 1.5L6 6.5L11 1.5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </div>
                </button>
                <div class="dropdown-menu" data-menu>
                  <div class="dropdown-option" data-value="diseno-grafico">
                    <span style="color: white !important;">Diseño Gráfico</span>
                    <div class="option-description" style="color: white !important;">Servicios profesionales de diseño gráfico</div>
                  </div>
                  <div class="dropdown-option" data-value="branding">
                    <span style="color: white !important;">Branding e Identidad Corporativa</span>
                    <div class="option-description" style="color: white !important;">Desarrollo de marca e identidad visual</div>
                  </div>
                  <div class="dropdown-option" data-value="ux-ui">
                    <span style="color: white !important;">Diseño UX/UI</span>
                    <div class="option-description" style="color: white !important;">Experiencia de usuario e interfaces digitales</div>
                  </div>
                  <div class="dropdown-option" data-value="estrategia-digital">
                    <span style="color: white !important;">Estrategia Digital</span>
                    <div class="option-description" style="color: white !important;">Consultoría y estrategia de comunicación</div>
                  </div>
                  <div class="dropdown-option" data-value="consultoria">
                    <span style="color: white !important;">Consultoría General</span>
                    <div class="option-description" style="color: white !important;">Asesoría personalizada para tu proyecto</div>
                  </div>
                  <div class="dropdown-option" data-value="otro">
                    <span style="color: white !important;">Otro</span>
                    <div class="option-description" style="color: white !important;">Cuéntanos sobre tu proyecto específico</div>
                  </div>
                </div>
                <input type="hidden" name="servicio" id="servicio" required>
              </div>
            </div>
            <div class="form-group">
              <label for="asunto" class="form-label">Asunto</label>
              <input
                type="text"
                id="asunto"
                name="asunto"
                placeholder="¿De qué quieres hablarnos?"
                class="form-input"
                required
              />
            </div>
          </div>

          <div class="form-group">
            <label for="mensaje" class="form-label">Mensaje</label>
            <textarea
              id="mensaje"
              name="mensaje"
              placeholder="Escribe tu mensaje..."
              class="form-textarea"
              rows="5"
              required
            ></textarea>
          </div>

          <div class="form-actions">
            <MainButton text="Enviar" type="submit" />
          </div>
        </form>
      </div>
    </div>
  </div>
</section>

<style>
  .contact-section {
    width: 100%;
    background: var(--color-black-a);
    padding: 100px 0;
  }

  .contact-container {
    max-width: 1920px;
    margin: 0 auto;
    padding: 0 100px;
    display: flex;
    flex-direction: column;
    gap: 150px;
  }

  .contact-header {
    max-width: 600px;
  }

  .contact-title {
    color: var(--color-white);
    font-family: var(--font-heading);
    font-size: var(--heading-5-size);
    font-weight: 300;
    line-height: var(--heading-5-line-height);
    margin: 0;
  }

  .highlight {
    color: var(--color-yellow);
    font-size: var(--heading-2-size);
    font-weight: 300;
    line-height: var(--heading-2-line-height);
  }

  .contact-content {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 200px;
  }

  .contact-info {
    display: flex;
    flex-direction: column;
    gap: 25px;
    min-width: 272px;
  }

  .info-item {
    display: flex;
    align-items: center;
    gap: 25px;
  }

  .icon-yellow {
    color: var(--color-yellow);
    flex-shrink: 0;
  }

  .info-text {
    color: var(--color-white);
    font-family: var(--font-body);
    font-size: var(--body-2-size);
    font-weight: 400;
    margin: 0;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .info-text:hover {
    color: var(--color-yellow);
  }

  .contact-form-wrapper {
    flex: 1;
    max-width: 792px;
    display: flex;
    flex-direction: column;
    gap: 35px;
  }

  .form-title {
    color: var(--color-yellow);
    font-family: var(--font-heading);
    font-size: var(--heading-2-size);
    font-weight: 300;
    line-height: var(--heading-2-line-height);
    margin: 0;
  }

  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 25px;
  }

  .form-row {
    display: flex;
    gap: 20px;
  }

  .form-group {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .form-label {
    color: var(--color-white);
    font-family: var(--font-body);
    font-size: var(--body-bold-5-size);
    font-weight: 600;
  }

  .form-input,
  .form-textarea,
  .form-select {
    width: 100%;
    box-sizing: border-box;
    background: var(--color-gray-b);
    border: none;
    border-radius: 5px;
    padding: 10px;
    color: var(--color-white);
    font-family: var(--font-body);
    font-size: var(--body-4-size);
    font-weight: 400;
    transition: background 0.3s ease, outline 0.3s ease;
  }

  .form-input::placeholder,
  .form-textarea::placeholder {
    color: var(--color-gray-a);
  }

  .form-input:focus,
  .form-textarea:focus,
  .form-select:focus {
    outline: 2px solid var(--color-yellow);
    background: #333;
  }

  /* Motion Dropdown Styling */
  .motion-dropdown {
    position: relative;
    width: 100%;
  }

  .dropdown-trigger {
    width: 100%;
    box-sizing: border-box;
    background: var(--color-gray-b);
    border: none;
    border-radius: 5px;
    padding: 10px;
    color: var(--color-white)!important;
    font-family: var(--font-body);
    font-size: var(--body-4-size);
    font-weight: 400;
    height: 44px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .dropdown-trigger:hover {
    background: #333;
  }

  .dropdown-trigger:focus {
    outline: 2px solid var(--color-yellow);
    background: #333;
  }

  .dropdown-text {
    flex: 1;
    text-align: left;
    color: var(--color-white)!important;
  }

  .dropdown-text.selected {
    color: var(--color-white)!important;
  }

  .dropdown-arrow {
    color: var(--color-gray-a);
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
  }

  .dropdown-trigger:hover .dropdown-arrow {
    color: var(--color-yellow);
  }

  .dropdown-trigger.open .dropdown-arrow {
    color: var(--color-yellow);
    transform: rotate(180deg);
  }

  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: var(--color-gray-b);
    border-radius: 5px;
    margin-top: 4px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    z-index: 1000;
    overflow: hidden;
    opacity: 0;
    transform: translateY(-10px) scale(0.95);
    pointer-events: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dropdown-menu.open {
    opacity: 1;
    transform: translateY(0) scale(1);
    pointer-events: all;
  }

  .dropdown-option {
    padding: 12px 16px;
    cursor: pointer;
    transition: all 0.2s ease;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .dropdown-option:last-child {
    border-bottom: none;
  }

  .dropdown-option:hover {
    background: var(--color-yellow);
    color: var(--color-black-a);
    transform: translateX(4px);
  }

  .dropdown-option span {
    display: block;
    font-weight: 600;
    margin-bottom: 2px;
  }

  .option-description {
    font-size: 12px;
    opacity: 0.8;
    line-height: 1.3;
  }

  .dropdown-option:hover .option-description {
    opacity: 0.9;
  }

  .form-input {
    height: 44px;
  }

  .form-textarea {
    resize: vertical;
    min-height: 133px;
  }

  .form-actions {
    display: flex;
    justify-content: flex-start;
    align-items: center;
  }

  /* Responsive Design */
  @media (max-width: 1200px) {
    .contact-container {
      padding: 0 60px;
      gap: 100px;
    }

    .contact-content {
      gap: 100px;
    }
  }

  @media (max-width: 968px) {
    .contact-container {
      padding: 0 40px;
      gap: 80px;
    }

    .contact-content {
      flex-direction: column;
      gap: 60px;
    }

    .contact-info {
      width: 100%;
    }

    .contact-form-wrapper {
      width: 100%;
    }
  }

  @media (max-width: 768px) {
    .contact-section {
      padding: 80px 0;
    }

    .contact-container {
      padding: 0 30px;
      gap: 60px;
    }

    .contact-title {
      font-size: 24px;
      line-height: 28px;
    }

    .highlight {
      font-size: 36px;
      line-height: 40px;
    }

    .form-title {
      font-size: 36px;
      line-height: 40px;
    }

    .form-row {
      flex-direction: column;
    }
  }

  @media (max-width: 640px) {
    .contact-section {
      padding: 60px 0;
    }

    .contact-container {
      padding: 0 20px;
      gap: 40px;
    }

    .contact-title {
      font-size: 20px;
      line-height: 24px;
    }

    .highlight {
      font-size: 28px;
      line-height: 32px;
    }

    .form-title {
      font-size: 28px;
      line-height: 32px;
    }

    .info-item {
      gap: 15px;
    }

    .icon-yellow {
      width: 20px;
      height: 20px;
    }

    .info-text {
      font-size: 14px;
    }
  }

  @media (max-width: 480px) {
    .contact-section {
      padding: 40px 0;
    }

    .contact-container {
      padding: 0 16px;
      gap: 30px;
    }

  }
</style>

<script>
  import { animate, stagger } from 'motion';

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.contact-form') as HTMLFormElement;
    const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement;

    // Motion Dropdown functionality
    const dropdown = document.querySelector('[data-dropdown]') as HTMLElement;
    const trigger = dropdown?.querySelector('[data-trigger]') as HTMLButtonElement;
    const menu = dropdown?.querySelector('[data-menu]') as HTMLElement;
    const arrow = dropdown?.querySelector('[data-arrow]') as HTMLElement;
    const text = dropdown?.querySelector('[data-text]') as HTMLElement;
    const hiddenInput = dropdown?.querySelector('input[type="hidden"]') as HTMLInputElement;
    const options = dropdown?.querySelectorAll('.dropdown-option') as NodeListOf<HTMLElement>;

    let isOpen = false;

    if (dropdown && trigger && menu && arrow && text && hiddenInput) {
      // Toggle dropdown
      trigger.addEventListener('click', () => {
        isOpen = !isOpen;
        
        if (isOpen) {
          openDropdown();
        } else {
          closeDropdown();
        }
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', (e) => {
        if (!dropdown.contains(e.target as Node) && isOpen) {
          closeDropdown();
        }
      });

      // Handle option selection
      options.forEach((option) => {
        option.addEventListener('click', () => {
          const value = option.getAttribute('data-value');
          const label = option.querySelector('span')?.textContent;
          
          if (value && label) {
            hiddenInput.value = value;
            text.textContent = label;
            text.classList.add('selected');
            closeDropdown();
          }
        });
      });

      function openDropdown() {
        isOpen = true;
        trigger.classList.add('open');
        menu.classList.add('open');
        
        // Animate arrow rotation
        animate(arrow, { transform: 'rotate(180deg)' }, { duration: 0.3, easing: 'ease-out' });
        
        // Animate menu appearance with Motion
        animate(menu, 
          { 
            opacity: [0, 1],
            transform: ['scale(0.95) translateY(-10px)', 'scale(1) translateY(0px)']
          }, 
          { 
            duration: 0.3, 
            easing: [0.4, 0, 0.2, 1] 
          }
        );

        // Stagger animate options
        animate(options, 
          { 
            opacity: [0, 1],
            transform: ['translateX(-20px)', 'translateX(0px)']
          }, 
          { 
            duration: 0.2, 
            delay: stagger(0.05),
            easing: 'ease-out'
          }
        );
      }

      function closeDropdown() {
        isOpen = false;
        trigger.classList.remove('open');
        
        // Animate arrow rotation back
        animate(arrow, { transform: 'rotate(0deg)' }, { duration: 0.3, easing: 'ease-out' });
        
        // Animate menu disappearance
        animate(menu, 
          { 
            opacity: [1, 0],
            transform: ['scale(1) translateY(0px)', 'scale(0.95) translateY(-10px)']
          }, 
          { 
            duration: 0.2, 
            easing: [0.4, 0, 0.2, 1] 
          }
        ).finished.then(() => {
          menu.classList.remove('open');
        });
      }
    }

    // Form submission logic
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Deshabilitar el botón durante el envío
        if (submitButton) {
          submitButton.disabled = true;
          const originalText = submitButton.textContent;
          submitButton.textContent = 'Enviando...';
        }

        const formData = new FormData(form);
        const data = {
          nombre: formData.get('nombre') as string,
          correo: formData.get('correo') as string,
          servicio: formData.get('servicio') as string,
          asunto: formData.get('asunto') as string,
          mensaje: formData.get('mensaje') as string,
        };

        try {
          const response = await fetch('/api/contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          });

          const result = await response.json();

          if (response.ok) {
            // Éxito
            alert('¡Mensaje enviado correctamente! Te contactaremos pronto.');
            form.reset();
            // Reset dropdown
            if (text && hiddenInput) {
              text.textContent = 'Selecciona un servicio...';
              text.classList.remove('selected');
              hiddenInput.value = '';
            }
          } else {
            // Error del servidor
            alert(`Error: ${result.error || 'No se pudo enviar el mensaje'}`);
          }
        } catch (error) {
          // Error de red
          console.error('Error:', error);
          alert('Error de conexión. Por favor, inténtalo de nuevo.');
        } finally {
          // Rehabilitar el botón
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.textContent = 'Enviar';
          }
        }
      });
    }
  });
</script>
